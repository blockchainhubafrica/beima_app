{
  "contractName": "KeeperCompatibleInterface",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "checkData",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"params\":{\"checkData\":\"data passed to the contract when checking for upkeep.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"checks if the contract requires work to be done.\"},\"performUpkeep(bytes)\":{\"notice\":\"Performs work on the contract. Executed by the keepers, via the registry.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":\"KeeperCompatibleInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"keccak256\":\"0xd2d73117e394024c56c712e4b73fc91b5d4ae2ede33752d237df4d0361851feb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc6c9da5c956fbe717f8933d8611dfe7ea289329e77ab66fab6c00f426741357\",\"dweb:/ipfs/QmUmcKmaSGqbR5R5fYr47T363c8zTpg7X42Q72u42vJohB\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface KeeperCompatibleInterface {\n\n  /**\n   * @notice checks if the contract requires work to be done.\n   * @param checkData data passed to the contract when checking for upkeep.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with,\n   * if upkeep is needed.\n   */\n  function checkUpkeep(\n    bytes calldata checkData\n  )\n    external\n    returns (\n      bool upkeepNeeded,\n      bytes memory performData\n    );\n\n  /**\n   * @notice Performs work on the contract. Executed by the keepers, via the registry.\n   * @param performData is the data which was passed back from the checkData\n   * simulation.\n   */\n  function performUpkeep(\n    bytes calldata performData\n  ) external;\n}\n",
  "sourcePath": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
  "ast": {
    "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
    "exportedSymbols": {
      "KeeperCompatibleInterface": [
        1067
      ]
    },
    "id": 1068,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1050,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1067,
        "linearizedBaseContracts": [
          1067
        ],
        "name": "KeeperCompatibleInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1051,
              "nodeType": "StructuredDocumentation",
              "src": "98:356:6",
              "text": " @notice checks if the contract requires work to be done.\n @param checkData data passed to the contract when checking for upkeep.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with,\n if upkeep is needed."
            },
            "functionSelector": "6e04ff0d",
            "id": 1060,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1053,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "483:24:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1052,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "477:34:6"
            },
            "returnParameters": {
              "id": 1059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "545:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1058,
                  "mutability": "mutable",
                  "name": "performData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "570:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1057,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "537:63:6"
            },
            "scope": 1067,
            "src": "457:144:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1061,
              "nodeType": "StructuredDocumentation",
              "src": "605:190:6",
              "text": " @notice Performs work on the contract. Executed by the keepers, via the registry.\n @param performData is the data which was passed back from the checkData\n simulation."
            },
            "functionSelector": "4585e33b",
            "id": 1066,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "performData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "826:26:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "820:36:6"
            },
            "returnParameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:0:6"
            },
            "scope": 1067,
            "src": "798:68:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1068,
        "src": "57:811:6"
      }
    ],
    "src": "32:837:6"
  },
  "legacyAST": {
    "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
    "exportedSymbols": {
      "KeeperCompatibleInterface": [
        1067
      ]
    },
    "id": 1068,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1050,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1067,
        "linearizedBaseContracts": [
          1067
        ],
        "name": "KeeperCompatibleInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1051,
              "nodeType": "StructuredDocumentation",
              "src": "98:356:6",
              "text": " @notice checks if the contract requires work to be done.\n @param checkData data passed to the contract when checking for upkeep.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with,\n if upkeep is needed."
            },
            "functionSelector": "6e04ff0d",
            "id": 1060,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1053,
                  "mutability": "mutable",
                  "name": "checkData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "483:24:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1052,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "477:34:6"
            },
            "returnParameters": {
              "id": 1059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1056,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "545:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1055,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1058,
                  "mutability": "mutable",
                  "name": "performData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "570:24:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1057,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "537:63:6"
            },
            "scope": 1067,
            "src": "457:144:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1061,
              "nodeType": "StructuredDocumentation",
              "src": "605:190:6",
              "text": " @notice Performs work on the contract. Executed by the keepers, via the registry.\n @param performData is the data which was passed back from the checkData\n simulation."
            },
            "functionSelector": "4585e33b",
            "id": 1066,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "performData",
                  "nodeType": "VariableDeclaration",
                  "scope": 1066,
                  "src": "826:26:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "820:36:6"
            },
            "returnParameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:0:6"
            },
            "scope": 1067,
            "src": "798:68:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1068,
        "src": "57:811:6"
      }
    ],
    "src": "32:837:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-11-25T09:15:14.627Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "checkUpkeep(bytes)": {
        "params": {
          "checkData": "data passed to the contract when checking for upkeep."
        },
        "returns": {
          "performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed.",
          "upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
        }
      },
      "performUpkeep(bytes)": {
        "params": {
          "performData": "is the data which was passed back from the checkData simulation."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "checkUpkeep(bytes)": {
        "notice": "checks if the contract requires work to be done."
      },
      "performUpkeep(bytes)": {
        "notice": "Performs work on the contract. Executed by the keepers, via the registry."
      }
    },
    "version": 1
  }
}